pre_upgrade() {
  create_perl_script
  ./upgrade.pl $1 $2
  remove_perl_script
}

function create_perl_script() {
  echo "create upgrade script";

echo "#!/usr/bin/perl

use strict;
use warnings;
use DBI;

my(\$new, \$old) = @ARGV;

\$new =~ /git-(\d+)/;
my \$new_version = \$1;

\$old =~ /git-(\d+)/;
my \$old_version = \$1;

printf(\"upgrade database from version: \$old_version to version: \$new_version\n\");

my \$i;
for (\$i = \$old_version; \$i <= \$new_version; \$i++ ) {
  if (\$i == 2) {
    my \$sql = DBI->connect('dbi:Pg:host=localhost;dbname=axum', 'axum', '', {
                              PrintError => 0, RaiseError => 1,
                              AutoCommit => 0, pg_enable_utf8 => 1,});

    my \$query = \"ALTER TABLE global_config
                  ADD startup_state boolean NOT NULL DEFAULT FALSE;\";

    my \$q = \$sql->prepare(\$query);
    \$q->execute();
    \$sql->commit();

    \$query = \"ALTER TABLE src_config
                ADD COLUMN use_mod_preset boolean NOT NULL DEFAULT FALSE,
                ADD COLUMN mod_on_off boolean NOT NULL DEFAULT FALSE,
                ADD COLUMN mod_lvl float NOT NULL DEFAULT -140;\";

    \$q = \$sql->prepare(\$query);
    \$q->execute();
    \$sql->commit();
    \$sql->disconnect();

    my \$j = \$i+1;
    printf(\"Database upgrade version \$i to version \$j done!\n\");
  }
  if (\$i == 3) {
    my \$sql = DBI->connect('dbi:Pg:host=localhost;dbname=axum', 'axum', '', {
                              PrintError => 0, RaiseError => 1,
                              AutoCommit => 0, pg_enable_utf8 => 1,});

    my \$query = \"INSERT INTO functions VALUES ('(0,,197)', 'Fader and on active/inactive', 3, 3);\";

    my \$q = \$sql->prepare(\$query);
    \$q->execute();
    \$sql->commit();
    \$sql->disconnect();

    my \$j = \$i+1;
    printf(\"Database upgrade version \$i to version \$j done!\n\");
  }
  if (\$i == 4) {
    my \$sql = DBI->connect('dbi:Pg:host=localhost;dbname=axum', 'axum', '', {
                              PrintError => 0, RaiseError => 1,
                              AutoCommit => 0, pg_enable_utf8 => 1,});

    my \$query = \"INSERT INTO functions VALUES ('(0,,198)', 'Fader on', 3, 3);\";
    my \$q = \$sql->prepare(\$query);
    \$q->execute();
    \$sql->commit();

    \$query = \"INSERT INTO functions VALUES ('(0,,199)', 'Fader off', 3, 3);\";
    \$q = \$sql->prepare(\$query);
    \$q->execute();
    \$sql->commit();

    \$query = \"INSERT INTO functions VALUES ('(0,,200)', 'Fader on/off', 3, 3);\";
    \$q = \$sql->prepare(\$query);
    \$q->execute();
    \$sql->commit();

    \$sql->disconnect();

    my \$j = \$i+1;
    printf(\"Database upgrade version \$i to version \$j done!\n\");
  }
  if (\$i == 5) {
    my \$sql = DBI->connect('dbi:Pg:host=localhost;dbname=axum', 'axum', '', {
                              PrintError => 0, RaiseError => 1,
                              AutoCommit => 0, pg_enable_utf8 => 1,});

    my \$query = \"INSERT INTO functions VALUES ('(0,,64)', 'Module level', 5, 5);\";
    my \$q = \$sql->prepare(\$query);
    \$q->execute();
    \$sql->commit();

    \$sql->disconnect();

    my \$j = \$i+1;
    printf(\"Database upgrade version \$i to version \$j done!\n\");
  }
  if (\$i == 6) {
    my \$sql = DBI->connect('dbi:Pg:host=localhost;dbname=axum', 'axum', '', {
                              PrintError => 0, RaiseError => 1,
                              AutoCommit => 0, pg_enable_utf8 => 1,});

    my \$query = \"
INSERT INTO functions VALUES ('(4,,369)', 'Control 1 mode AGC threshold', 3, 3);
INSERT INTO functions VALUES ('(4,,370)', 'Control 2 mode AGC threshold', 3, 3);
INSERT INTO functions VALUES ('(4,,371)', 'Control 3 mode AGC threshold', 3, 3);
INSERT INTO functions VALUES ('(4,,372)', 'Control 4 mode AGC threshold', 3, 3);
INSERT INTO functions VALUES ('(0,,201)', 'AGC threshold', 2, 4);

INSERT INTO functions VALUES ('(4,,373)', 'Control 1 mode downward expander threshold', 3, 3);
INSERT INTO functions VALUES ('(4,,374)', 'Control 2 mode downward expander threshold', 3, 3);
INSERT INTO functions VALUES ('(4,,375)', 'Control 3 mode downward expander threshold', 3, 3);
INSERT INTO functions VALUES ('(4,,376)', 'Control 4 mode downward expander threshold', 3, 3);
INSERT INTO functions VALUES ('(0,,202)', 'Downward expander threshold', 2, 4);

UPDATE functions SET name = 'AGC amount' WHERE (func).type = 0 AND (func).func = 59;

UPDATE functions SET name = 'Control 1 mode AGC amount' WHERE (func).type = 4 AND (func).func = 53;
UPDATE functions SET name = 'Control 2 mode AGC amount' WHERE (func).type = 4 AND (func).func = 118;
UPDATE functions SET name = 'Control 3 mode AGC amount' WHERE (func).type = 4 AND (func).func = 183;
UPDATE functions SET name = 'Control 4 mode AGC amount' WHERE (func).type = 4 AND (func).func = 248;
    \";
    my \$q = \$sql->prepare(\$query);
    \$q->execute();
    \$sql->commit();

    \$sql->disconnect();

    my \$j = \$i+1;
    printf(\"Database upgrade version \$i to version \$j done!\n\");
  }
}" > upgrade.pl

chmod +x upgrade.pl


}

function remove_perl_script() {
  echo "remove upgrade script";
  rm upgrade.pl
}

